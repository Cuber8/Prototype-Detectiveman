using System;
using System.Collections.Generic;
using System.IO;
using System.Security.Cryptography;
using System.Text;

namespace MrDetective
{
    public class MalwareScanner
    {
        private readonly Dictionary<string, string> malwareSignatures = new Dictionary<string, string>
        {
            {"d4f6b032e6a5c8e9f1a2b3c4d5e6f7a8", "Trojan.Win32.Generic"},
            {"a1b2c3d4e5f6789012345678901234567", "Virus.Win32.Exploit"},
            {"f1e2d3c4b5a6987654321098765432109", "Ransomware.CryptoLocker"}
        };

        public ScanResult ScanFile(string filePath)
        {
            var result = new ScanResult { FilePath = filePath };
            
            try
            {
                string fileHash = CalculateMD5(filePath);
                result.FileHash = fileHash;

                if (malwareSignatures.ContainsKey(fileHash))
                {
                    result.IsMalicious = true;
                    result.MalwareName = malwareSignatures[fileHash];
                    result.ThreatLevel = "High";
                }
                else
                {
                    result.IsMalicious = false;
                    result.ThreatLevel = "None";
                }

                result.ScanTime = DateTime.Now;
                result.ScanSuccessful = true;
            }
            catch (Exception ex)
            {
                result.ScanSuccessful = false;
                result.ErrorMessage = ex.Message;
            }

            return result;
        }

        private string CalculateMD5(string filePath)
        {
            using (var md5 = MD5.Create())
            using (var stream = File.OpenRead(filePath))
            {
                byte[] hash = md5.ComputeHash(stream);
                return BitConverter.ToString(hash).Replace("-", "").ToLowerInvariant();
            }
        }
    }

    public class ScanResult
    {
        public string FilePath { get; set; }
        public string FileHash { get; set; }
        public bool IsMalicious { get; set; }
        public string MalwareName { get; set; }
        public string ThreatLevel { get; set; }
        public DateTime ScanTime { get; set; }
        public bool ScanSuccessful { get; set; }
        public string ErrorMessage { get; set; }
    }
}